# 图的节点数量
NODE_COUNT = 12

# 双向路径及其距离
BIDIRECTIONAL_EDGES = [
    (2, 5, 116), (4, 5, 96), (5, 7, 80), (6, 7, 41), (7, 8, 78), (5, 10, 99)
]

# 单向路径及其距离
SINGLE_DIRECTION_EDGES = [
    (1, 2, 96), (2, 3, 158), (3, 8, 116),
    (8, 11, 99), (11, 10, 118), (10, 9, 96),
    (9, 4, 99), (4, 1, 116)
]

# 双向邻接点
NEIGHBOR_POINTS = [
    (2, 5), (4, 5), (5, 7), (6, 7), (7, 8), (5, 10),
    (5, 2), (5, 4), (7, 5), (7, 6), (8, 7), (10, 5),
]

# 所有可能的邻接点路径，包含距离与方向
NEIGHBOR_PATHS = {
    (2,5):(116,'S'), (5,2):(116,'N'), (4,5):(96,'E'), (5,4):(96,'W'),
    (5,7):(80,'E'), (7,5):(80,'W'), (6,7):(41,'S'), (7,6):(41,'N'),
    (7,8):(78,'E'), (8,7):(78,'W'), (5,10):(99,'S'), (10,5):(99,'N'),
    (1,2):(96,'E'), (2,3):(158,'E'), (3,8):(116,'S'), (8,11):(99,'S'),
    (11,10):(118,'W'), (10,9):(96,'W'), (9,4):(99,'N'), (4,1):(116,'N')
}

# 映射表，确定从当前朝向到目标朝向需要的旋转角度
TURN_MAPPING = {
    ('E', 'N'): -90, ('E', 'S'): 90, ('E', 'W'): 180,
    ('N', 'E'): 90, ('N', 'W'): -90, ('N', 'S'): 180,
    ('S', 'E'): -90, ('S', 'W'): 90, ('S', 'N'): 180,
    ('W', 'E'): 180, ('W', 'S'): -90, ('W', 'N'): 90
}
# 透视变换目标点的尺寸
TRANSFORMED_IMAGE_SIZE = (270, 310)

# 防止与节点7直接连接的检查
FORBIDDEN_NODE = 7
# 停车场节点
PARK_NODE = 6